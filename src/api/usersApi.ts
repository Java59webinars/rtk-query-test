import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { User } from "../types/user";

// –°–æ–∑–¥–∞—ë–º API
export const usersApi = createApi({
    reducerPath: "usersApi", // –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ä–µ–¥—å—é—Å–µ—Ä–∞ –≤ Redux store
    baseQuery: fetchBaseQuery({ baseUrl: "https://67d17222825945773eb4598b.mockapi.io/api/users/" }),
    tagTypes: ["Users"], // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    endpoints: (builder) => ({
        getUsers: builder.query<User[], void>({
            query: () => "java-59", // URL-—ç–Ω–¥–ø–æ–∏–Ω—Ç
            providesTags: ["Users"], // –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–º–µ—á–∞—é—Ç—Å—è —Ç–µ–≥–æ–º
        }),
        createUser: builder.mutation<User, Partial<User>>({
            query: (user) => ({
                url: "java-59", // üëà API-—ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞
                method: "POST",
                body: user, // üëà –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            }),
            invalidatesTags: ["Users"], // üëà –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
        }),
        updateUser: builder.mutation<User, { id: string; name: string }>({
            query: ({ id, ...patch }) => ({
                url: `java-59/${id}`,
                method: 'PUT',
                body: patch,
            }),
            invalidatesTags: ['Users'],
        }),
    }),


});



// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
export const { useGetUsersQuery,  useCreateUserMutation, useUpdateUserMutation  } = usersApi;
